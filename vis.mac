# Sets some default verbose
/control/verbose 2
/run/verbose 2

# Create an OpenGL view:
/vis/open OGL 600x600-0+0

# Disable auto refresh and quieten vis messages whilst scene and trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

# Draw geometry:
/vis/drawVolume

# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 90. 180.

# Specify zoom value:
/vis/viewer/zoom 1.4

# Draw smooth trajectories at end of event, showing trajectory points as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2

/vis/filtering/trajectories/create/particleFilter
/vis/filtering/trajectories/particleFilter-0/add gamma
/vis/filtering/trajectories/particleFilter-0/invert true

# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/set e- blue
#/vis/modeling/trajectories/drawByParticleID-0/set e+ red
#/vis/modeling/trajectories/drawByParticleID-0/set proton brown
#/vis/modeling/trajectories/drawByParticleID-0/set gamma green
#/vis/modeling/trajectories/drawByParticleID-0/set pi+ magenta
#/vis/modeling/trajectories/drawByParticleID-0/set pi0 magenta
#/vis/modeling/trajectories/drawByParticleID-0/set pi- magenta
#/vis/modeling/trajectories/drawByParticleID-0/set mu- cyan
#/vis/modeling/trajectories/drawByParticleID-0/set mu+ cyan

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
